
USE [Zoo]

---1

CREATE TABLE Owners(
Id INT PRIMARY KEY IDENTITY(1,1),
[Name]  VARCHAR(50) NOT NULL,
PhoneNumber VARCHAR(15) NOT NULL,
[Address] VARCHAR(50) NULL
)


CREATE TABLE AnimalTypes(
Id INT PRIMARY KEY IDENTITY(1,1),
AnimalType VARCHAR(30) NOT NULL
)

CREATE TABLE Cages (
Id  INT PRIMARY KEY IDENTITY(1,1),
AnimalTypeId INT NOT NULL FOREIGN KEY
REFERENCES AnimalTypes(Id)
)


CREATE TABLE Animals (
Id  INT PRIMARY KEY IDENTITY(1,1),
[Name] VARCHAR(30) NOT NULL,
BirthDate DATE NOT NULL,
OwnerId  INT NULL FOREIGN KEY
REFERENCES Owners(Id),
AnimalTypeId INT  NOT NULL   FOREIGN KEY
REFERENCES AnimalTypes(Id)
)

CREATE TABLE AnimalsCages (
CageId INT  NOT NULL FOREIGN KEY
REFERENCES Cages(Id),
AnimalId INT NOT NULL FOREIGN KEY
REFERENCES Animals(Id),
CONSTRAINT PK_AnimalsCages PRIMARY KEY
(CageId,AnimalId)
)

CREATE TABLE VolunteersDepartments (
Id INT PRIMARY KEY IDENTITY(1,1),
DepartmentName VARCHAR(30) NOT NULL
)


CREATE TABLE Volunteers (
Id INT PRIMARY KEY IDENTITY(1,1),
[Name]  VARCHAR(50) NOT NULL,
PhoneNumber VARCHAR(15) NOT NULL,
[Address] VARCHAR(50) NULL,
AnimalId INT NULL FOREIGN KEY
REFERENCES Animals(Id),
DepartmentId INT NOT NULL FOREIGN KEY
REFERENCES VolunteersDepartments(Id)

)
---2
INSERT INTO Volunteers
( [Name], PhoneNumber, [Address], AnimalId, DepartmentId)
VALUES
('Anita Kostova',	'0896365412','Sofia, 5 Rosa str.',	15,	1),
('Dimitur Stoev',	'0877564223',	null,	42,	4),
('Kalina Evtimova',	'0896321112',	'Silistra, 21 Breza str.',	9,	7),
('Stoyan Tomov'	,'0898564100',	'Montana, 1 Bor str.',	18,	8),
('Boryana Mileva'	,'0888112233',	null,	31,	5)


INSERT INTO Animals
([Name],	BirthDate,	OwnerId,	AnimalTypeId)
VALUES
('Giraffe',	'2018-09-21',	21,	1),
('Harpy Eagle',	'2015-04-17',	15	,3),
('Hamadryas Baboon',	'2017-11-02',	null	,1),
('Tuatara',	'2021-06-30',	2,	4)

---3
UPDATE Animals
SET OwnerId=(SELECT Id FROM Owners 
WHERE [Name]='Kaloqn Stoqnov' )
WHERE OwnerId IS NULL


---4

DELETE FROM Volunteers WHERE DepartmentId=2

DELETE FROM VolunteersDepartments 
WHERE DepartmentName='Education program assistant'

---5
SELECT v.[Name], v.PhoneNumber, v.[Address],
v.AnimalId, v.DepartmentId
FROM Volunteers AS v
ORDER BY 
v.[Name] ASC, v.Id ASC , v.DepartmentId ASC


---6

SELECT a.[Name] ,t.AnimalType,
FORMAT(a.BirthDate,'dd.MM.yyyy') AS BirthDate

FROM Animals AS a
LEFT JOIN AnimalTypes AS t
ON t.Id= a.AnimalTypeId
ORDER BY a.[Name] ASC

--7
SELECT TOP 5 o.[Name] AS [Owner],
COUNT(a.Id) AS CountOfAnimals
FROM Owners AS o INNER JOIN 
Animals AS a ON O.Id= a.OwnerId
GROUP BY o.[Name]
ORDER BY CountOfAnimals DESC,
o.[Name]  ASC

---8

SELECT * FROM Animals AS a 
INNER JOIN AnimalTypes AS t
ON a.AnimalTypeId=t.Id
WHERE 
t.AnimalType='mammals'

SELECT CONCAT(o.[Name],'-', a.[Name]) AS OwnersAnimals,
o.PhoneNumber, c.CageId AS CageId
FROM Owners AS o
 JOIN Animals AS a
ON  o.Id= a.OwnerId
 JOIN AnimalTypes  AS t
ON t.Id= a.AnimalTypeId
 JOIN AnimalsCages AS c ON 
a.id= c.AnimalId
WHERE t.AnimalType='mammals'
ORDER BY 
o.[Name] ASC, a.[Name] DESC


---9

SELECT v.[Name],v.PhoneNumber,
SUBSTRING(v.[Address],CHARINDEX(',',v.[Address])+1,LEN(v.[Address])) AS [Address]
FROM Volunteers AS v
INNER JOIN 
VolunteersDepartments AS d
ON d.Id= v.DepartmentId
WHERE d.DepartmentName='Education program assistant'
AND (v.[Address] LIKE '%Sofia%' OR  v.[Address] LIKE 'Sofia%')
ORDER BY v.[Name] ASC


---10

SELECT a.[Name],
YEAR(a.BirthDate) AS BirthYear ,
t.AnimalType
FROM Animals AS a LEFT JOIN 
AnimalTypes AS t ON t.Id= a.AnimalTypeId
WHERE a.OwnerId IS NULL AND
DATEDIFF(YEAR,a.BirthDate,'2022-01-01' )<5
AND a.AnimalTypeId NOT IN(SELECT Id FROM AnimalTypes WHERE  AnimalType='Birds')

ORDER BY a.[Name] ASC

---11

CREATE FUNCTION [dbo].[udf_GetVolunteersCountFromADepartment] 
(
	@VolunteersDepartment VARCHAR(30)
)
RETURNS INT
AS
BEGIN
	
	DECLARE @Result AS INT
	DECLARE @departmentId AS INT

	SET @departmentId= (SELECT Id FROM VolunteersDepartments
	WHERE DepartmentName=@VolunteersDepartment)
	
    SET @Result=(SELECT COUNT(v.Id)  FROM Volunteers AS v
	WHERE v.DepartmentId=@departmentId)

	RETURN @Result

END

---12

CREATE PROC usp_AnimalsWithOwnersOrNot(@AnimalName VARCHAR (30))
AS
BEGIN
SELECT a.[Name],
CASE WHEN o.[Name] IS NULL THEN 'For adoption'
ELSE (o.[Name])
END
AS OwnersName
FROM Animals AS a
LEFT JOIN Owners AS o ON a.OwnerId = o.Id
WHERE a.[Name] = @AnimalName
END
